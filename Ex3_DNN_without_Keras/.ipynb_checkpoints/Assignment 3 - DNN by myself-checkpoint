{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "aa00c0dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "import keras\n",
    "from keras.datasets import mnist\n",
    "import matplotlib.pyplot as plt\n",
    "from keras.utils import to_categorical\n",
    "import numpy as np\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "843c5e78",
   "metadata": {},
   "source": [
    "## Import dataset "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "eacd9deb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train: X=(60000, 28, 28), y=(60000,)\n",
      "Test: X=(10000, 28, 28), y=(10000,)\n"
     ]
    }
   ],
   "source": [
    "(train_images, train_labels), (test_images, test_labels) = mnist.load_data()\n",
    "print('Train: X=%s, y=%s' % (train_images.shape, train_labels.shape))\n",
    "print('Test: X=%s, y=%s' % (test_images.shape, test_labels.shape))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e496251f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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1jkTJ07MZWvXrg1r+/XrV/K5RWeUsy0wy7JsyJAhueyaa64p64yuzhssAACARAxYAAAAiRiwAAAAEjFgAQAAJGLAAgAASKQmtwhGytmSkmVZ1r9//5Jro82CWZZl06ZNC/MePcy1/LdXXnklly1btiysPXToUJgXbelrbGzMZUVbevr06RPmkydPLinraEeOHAnz73//+7lszZo1Hd1ORf3qV78K86NHj3ZyJ7WlaAvjrl27Sj7j9NNPT9QN1W7//v1h/rOf/SyX1dfXh7UDBgwI85tvvrnNfdF1RH+Pt99+e1hbtGF39uzZYb506dJcVu5zcKRoi3C5li9fnsuKnmWqlSd9AACARAxYAAAAiRiwAAAAEjFgAQAAJGLAAgAASKTbbBEs15IlS8J869atuay5uTms3bRpU5hPnDixrW1RpY4dOxbmCxYsyGWPP/54WFu0AWj16tVhPnr06FxWa5vmXn311Uq30Ol27NhRVv3HPvaxDuqktkT/FrMsy/bu3ZvLhg8fHtb27ds3aU90fUVbJi+77LJ2nz1nzpwwnzBhQrvPpvPceuutYR5tDOzVq1dYO2nSpDC/8847w7x3794ldpdl//73v8P8N7/5TS7bvXt3WNva2hrmt9xyS5hPnTq1xO6qlzdYAAAAiRiwAAAAEjFgAQAAJGLAAgAASMSSiwINDQ1h/pOf/CSXjRo1Kqy98cYbw/zCCy/MZdFCgizLstmzZ4d5XV1dmNM1bdu2LcyLFlpEfvnLX4b5uHHj2tQT3cO5555b6RY63OHDh3PZr3/967D2gQceCPPog+4iN998c5gPGDCg5DOoDUXX2fbt20s+46KLLgrzefPmtaknKuPgwYNhvnLlyjCPnuOKllmsX7++rW39rz/96U9hPn369DD//e9/X/LZX/7yl8N84cKFJZ9Ra7zBAgAASMSABQAAkIgBCwAAIBEDFgAAQCIGLAAAgERsESzThz/84Vx23333hbXXXnttmK9evbqkLMuy7M033wzzq6++OswbGxvDnMr6+te/Huatra25bPz48WFtd9gWGP15pKzvjg4cONAh577wwgthfuLEiTDfvHlzmL/22mu57Pjx42Htz3/+85J/Z+/evcPaMWPGhHmvXr3C/K233splRVtfqW3RJrdFixaVdcYFF1yQy5qamsLa/v37l3U2lVV039q3b1/JZyxf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\n",
      "text/plain": [
       "<Figure size 864x216 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = plt.subplots(1, 5, figsize=(12, 3))\n",
    "for i in range(5):\n",
    "    axes[i].imshow(train_images[i],cmap=plt.get_cmap('binary'))\n",
    "    axes[i].axis('off')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d350621f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(60000, 28, 28)\n",
      "(10000, 28, 28)\n"
     ]
    }
   ],
   "source": [
    "print(train_images.shape)\n",
    "print(test_images.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "940207b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train = train_images.reshape((60000, 28 * 28))\n",
    "X_train = X_train.astype('float32') / 255 #scaling to have 0 to 1 values\n",
    "X_test = test_images.reshape((10000, 28 * 28))\n",
    "X_test = X_test.astype('float32') / 255\n",
    "\n",
    "y_train = to_categorical(train_labels)\n",
    "y_test = to_categorical(test_labels)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee6d4ca5",
   "metadata": {},
   "source": [
    "## Neural Network"
   ]
  },
  {
   "attachments": {
    "image.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "c25b4281",
   "metadata": {},
   "source": [
    "![image.png](attachment:image.png)"
   ]
  },
  {
   "attachments": {
    "image-2.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "4f3ce41f",
   "metadata": {},
   "source": [
    "### Forward propagation Y= X * W + B \n",
    "![image-2.png](attachment:image-2.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "cfb8c975",
   "metadata": {},
   "outputs": [],
   "source": [
    "def sigmoid(x):\n",
    "    return 1 / (1 + np.exp(-x))\n",
    "\n",
    "def sigmoid_prime(x):\n",
    "    return np.exp(-x) / (1 + np.exp(-x))**2\n",
    "\n",
    "def tanh(x):\n",
    "    return np.tanh(x)\n",
    "\n",
    "def tanh_prime(x):\n",
    "    return 1 - np.tanh(x)**2\n",
    "\n",
    "def relu(x):\n",
    "    return np.maximum(x, 0)\n",
    "\n",
    "def relu_prime(x):\n",
    "    return np.array(x >= 0).astype('int')\n",
    "\n",
    "def mse(y_true, y_pred):\n",
    "    return np.mean(np.power(y_true - y_pred, 2))\n",
    "\n",
    "def mse_prime(y_true, y_pred):\n",
    "    return 2 * (y_pred - y_true) / y_pred.size\n",
    "\n",
    "\n",
    "class FCLayer:\n",
    "    def __init__(self, input_size, output_size, activation):\n",
    "        self.input_size = input_size\n",
    "        self.output_size = output_size\n",
    "        \n",
    "        if activation in ['sigmoid', 'tanh']:\n",
    "            limit = np.sqrt(6 / (input_size + output_size))\n",
    "            self.weights = np.random.uniform(-limit, limit, size=(input_size, output_size)) #Xavier Initialization\n",
    "            if activation == 'sigmoid':\n",
    "                self.activation = ActivationLayer(sigmoid,sigmoid_prime)\n",
    "            else: self.activation = ActivationLayer(tanh,tanh_prime)\n",
    "        else: \n",
    "            self.weights = np.random.randn(input_size, output_size) * np.sqrt(2/(input_size + output_size))  #Hu Initialization\n",
    "            self.activation = ActivationLayer(relu,relu_prime)\n",
    "            \n",
    "        self.bias = np.zeros((1, output_size)) \n",
    "    \n",
    "    def forward(self, input):\n",
    "        self.input = input\n",
    "        self.output =  input @ self.weights + self.bias\n",
    "        return self.activation.forward(self.output)\n",
    "\n",
    "    \n",
    "    def backward(self, output_error, learning_rate):#delta\n",
    "        output_error = self.activation.backward(output_error, learning_rate)\n",
    "\n",
    "        weights_error = self.input.reshape((-1,1)) @ output_error #dL/dW\n",
    "        input_error = output_error @ self.weights.T #dL/dX\n",
    "        \n",
    "        self.weights -= learning_rate * weights_error\n",
    "        self.bias -= learning_rate * output_error \n",
    "\n",
    "        return input_error #dL/dX\n",
    "    \n",
    "    \n",
    "    \n",
    "class ActivationLayer:\n",
    "    def __init__(self, activation, activation_prime):\n",
    "        self.activation = activation\n",
    "        self.activation_prime = activation_prime\n",
    "    \n",
    "    def forward(self, input):\n",
    "        self.input = input\n",
    "        return self.activation(input)\n",
    "    \n",
    "    def backward(self, output_error, learning_rate):#dL/da\n",
    "        return output_error * self.activation_prime(self.input) #delta\n",
    "    \n",
    "    \n",
    "    \n",
    "class DenseNetwork:\n",
    "    def __init__(self, layer_parameters):\n",
    "        self.DNN_structure = []\n",
    "        for i in layer_parameters:\n",
    "            self.DNN_structure.append(FCLayer(*i))\n",
    "    \n",
    "    def fit(self, X_train, y_train, epochs, learning_rate):\n",
    "        for epoch in range(epochs):\n",
    "            loss = 0\n",
    "            for x, y_true in zip(X_train, y_train):\n",
    "                # forward\n",
    "                output = x\n",
    "                for layer in self.DNN_structure:\n",
    "                    output = layer.forward(output)\n",
    "\n",
    "                loss += mse(y_true, output)\n",
    "\n",
    "                # backward\n",
    "                output_error = mse_prime(y_true, output) #dL/da\n",
    "                for layer in reversed(self.DNN_structure):\n",
    "                    output_error = layer.backward(output_error, learning_rate)\n",
    "\n",
    "            loss /= len(X_train)\n",
    "            print('%d/%d, Loss=%f' % (epoch + 1, epochs, loss))\n",
    "            \n",
    "    def predict(self, input):\n",
    "        output = input\n",
    "        for layer in self.DNN_structure:\n",
    "            output = layer.forward(output)\n",
    "        return output\n",
    "\n",
    "    def pred(self, X_test):\n",
    "        y_pred = [np.argmax(self.predict(x)) for x in X_test]\n",
    "        return y_pred\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d8baae29",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/3, Loss=0.014787\n",
      "2/3, Loss=0.007371\n",
      "3/3, Loss=0.005669\n"
     ]
    }
   ],
   "source": [
    "DNN_structure = DenseNetwork([(28 * 28, 128,'relu'),(128, 10,'sigmoid')])\n",
    "DNN_structure.fit(X_train, y_train, epochs=3, learning_rate=0.1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "12e8543a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[6.48311129e-05, 4.80896142e-06, 1.71423930e-03, ...,\n",
       "        9.98141633e-01, 7.53736848e-05, 6.36465828e-05],\n",
       "       [7.63726575e-05, 9.10146561e-04, 9.84243400e-01, ...,\n",
       "        2.47370583e-11, 2.28114960e-05, 2.47915463e-11],\n",
       "       [3.45490666e-04, 9.91154247e-01, 1.07866671e-02, ...,\n",
       "        4.08942152e-03, 3.80971980e-03, 5.11804104e-04],\n",
       "       ...,\n",
       "       [3.24989848e-06, 1.02929651e-06, 7.80289536e-06, ...,\n",
       "        4.29212269e-04, 2.91141032e-03, 3.86846951e-03],\n",
       "       [5.50426581e-04, 1.78907254e-03, 3.61898269e-05, ...,\n",
       "        8.43356051e-05, 2.20137062e-01, 1.01283394e-05],\n",
       "       [7.91192795e-05, 1.56827947e-05, 2.67045296e-04, ...,\n",
       "        1.09071911e-09, 6.20345123e-08, 1.75450255e-08]])"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DNN_structure.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "840b4638",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = DNN_structure.pred(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "eb5bcc49",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.9691\n"
     ]
    }
   ],
   "source": [
    "y_true = [np.argmax(q) for q in y_test]\n",
    "accuracy = accuracy_score(y_true, y_pred)\n",
    "print('Accuracy: %.4f' % accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d54756b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "prediction: 1, true: 1\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "prediction: 4, true: 4\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "prediction: 9, true: 9\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "prediction: 6, true: 5\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "prediction: 9, true: 9\n"
     ]
    }
   ],
   "source": [
    "samples = 10\n",
    "for x, test, true in zip(X_test[5:samples], y_pred[5:samples], y_test[5:samples]):\n",
    "    image = np.reshape(x, (28, 28))\n",
    "    plt.imshow(image, cmap='binary')\n",
    "    plt.show()\n",
    "    true_label = np.argmax(true)\n",
    "    print(f'prediction: {test}, true: {true_label}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8807bd74",
   "metadata": {},
   "source": [
    "## 3 leyer "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e7ea017a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/3, Loss=0.014338\n",
      "2/3, Loss=0.007180\n",
      "3/3, Loss=0.005359\n",
      "Accuracy: 0.9658\n"
     ]
    }
   ],
   "source": [
    "DNN_structure = DenseNetwork([(28 * 28, 128,'tanh'),(128, 64,'tanh'),(64, 10,'sigmoid')])\n",
    "DNN_structure.fit(X_train, y_train, epochs=3, learning_rate=0.1)\n",
    "DNN_structure.predict(X_test)\n",
    "y_pred = DNN_structure.pred(X_test)\n",
    "y_true = [np.argmax(q) for q in y_test]\n",
    "accuracy = accuracy_score(y_true, y_pred)\n",
    "print('Accuracy: %.4f' % accuracy)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33a25e29",
   "metadata": {},
   "source": [
    "### 1 layer "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "10850e01",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/3, Loss=0.024116\n",
      "2/3, Loss=0.018592\n",
      "3/3, Loss=0.017486\n",
      "Accuracy: 0.9117\n"
     ]
    }
   ],
   "source": [
    "DNN_structure = DenseNetwork([(28 * 28, 10,'sigmoid')])\n",
    "DNN_structure.fit(X_train, y_train, epochs=3, learning_rate=0.1)\n",
    "DNN_structure.predict(X_test)\n",
    "y_pred = DNN_structure.pred(X_test)\n",
    "y_true = [np.argmax(q) for q in y_test]\n",
    "accuracy = accuracy_score(y_true, y_pred)\n",
    "print('Accuracy: %.4f' % accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6e200e9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
